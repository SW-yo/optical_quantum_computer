<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Strawberry Fields 回路図サンプル</title>
    <style>
        body {
            font-family: 'Consolas', 'Monaco', monospace;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            margin: 0;
            padding: 20px;
            color: #333;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
        }

        .title {
            text-align: center;
            color: #2c3e50;
            margin-bottom: 30px;
            font-size: 2.2em;
            background: linear-gradient(45deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .circuit-container {
            background: #f8f9fa;
            border: 2px solid #dee2e6;
            border-radius: 10px;
            padding: 25px;
            margin: 25px 0;
            overflow-x: auto;
        }

        .circuit-title {
            font-size: 1.3em;
            color: #495057;
            margin-bottom: 15px;
            font-weight: bold;
            border-bottom: 2px solid #6c757d;
            padding-bottom: 8px;
        }

        .circuit {
            font-family: 'Courier New', monospace;
            font-size: 12px;
            line-height: 1.4;
            white-space: pre;
            background: #ffffff;
            padding: 15px;
            border-radius: 8px;
            border: 1px solid #e9ecef;
            color: #2c3e50;
            overflow-x: auto;
            max-width: 100%;
            word-wrap: break-word;
        }

        .mode-line {
            display: flex;
            align-items: center;
            margin: 8px 0;
            font-weight: bold;
        }

        .gate {
            background: linear-gradient(45deg, #4ecdc4, #44a08d);
            color: white;
            padding: 4px 8px;
            border-radius: 6px;
            margin: 0 8px;
            font-size: 12px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .measurement {
            background: linear-gradient(45deg, #ff6b6b, #ee5a52);
            color: white;
            padding: 4px 8px;
            border-radius: 6px;
            margin: 0 8px;
            font-size: 12px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .wire {
            flex: 1;
            height: 2px;
            background: #6c757d;
            margin: 0 4px;
        }

        .code-block {
            background: #1e1e1e;
            color: #d4d4d4;
            padding: 20px;
            border-radius: 8px;
            margin: 20px 0;
            overflow-x: auto;
            font-family: 'Consolas', 'Monaco', monospace;
            font-size: 13px;
            line-height: 1.5;
        }

        .comment {
            color: #6a9955;
        }

        .keyword {
            color: #569cd6;
        }

        .string {
            color: #ce9178;
        }

        .number {
            color: #b5cea8;
        }

        .function {
            color: #dcdcaa;
        }

        .tabs {
            display: flex;
            margin-bottom: 0;
        }

        .tab {
            background: #e9ecef;
            border: none;
            padding: 12px 24px;
            cursor: pointer;
            border-top-left-radius: 8px;
            border-top-right-radius: 8px;
            margin-right: 4px;
            transition: all 0.3s ease;
        }

        .tab.active {
            background: #fff;
            border-bottom: 2px solid #667eea;
            color: #667eea;
            font-weight: bold;
        }

        .tab:hover {
            background: #f8f9fa;
        }

        .tab-content {
            display: none;
        }

        .tab-content.active {
            display: block;
        }

        .visualization-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin: 20px 0;
        }

        .wigner-plot, .prob-dist {
            background: white;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            padding: 15px;
            text-align: center;
        }

        .plot-placeholder {
            width: 100%;
            height: 200px;
            background: linear-gradient(45deg, #f8f9fa, #e9ecef);
            border: 2px dashed #6c757d;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #6c757d;
            border-radius: 8px;
            margin: 10px 0;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="title">🍓 Strawberry Fields 回路図サンプル</h1>
        
        <div class="tabs">
            <button class="tab active" onclick="showTab('basic')">基本回路</button>
            <button class="tab" onclick="showTab('gbs')">GBSサンプリング</button>
            <button class="tab" onclick="showTab('gkp')">GKP状態生成</button>
            <button class="tab" onclick="showTab('ml')">量子機械学習</button>
        </div>

        <!-- 基本回路 -->
        <div id="basic" class="tab-content active">
            <div class="circuit-container">
                <div class="circuit-title">📊 基本的な2モード回路</div>
                <div class="code-block">
<span class="keyword">import</span> strawberryfields <span class="keyword">as</span> sf
<span class="keyword">from</span> strawberryfields.ops <span class="keyword">import</span> *
<span class="keyword">import</span> numpy <span class="keyword">as</span> np

prog = sf.<span class="function">Program</span>(<span class="number">2</span>)  <span class="comment"># 2モードのプログラム</span>

<span class="keyword">with</span> prog.context <span class="keyword">as</span> q:
    <span class="comment"># 圧縮状態の生成</span>
    <span class="function">Sgate</span>(<span class="number">0.5</span>) | q[<span class="number">0</span>]
    <span class="function">Sgate</span>(<span class="number">0.3</span>) | q[<span class="number">1</span>]
    
    <span class="comment"># ビームスプリッター</span>
    <span class="function">BSgate</span>(np.pi/<span class="number">4</span>, <span class="number">0</span>) | (q[<span class="number">0</span>], q[<span class="number">1</span>])
    
    <span class="comment"># 位相シフト</span>
    <span class="function">Rgate</span>(np.pi/<span class="number">6</span>) | q[<span class="number">1</span>]
    
    <span class="comment"># 測定</span>
    <span class="function">MeasureX</span> | q[<span class="number">0</span>]
    <span class="function">MeasureP</span> | q[<span class="number">1</span>]

prog.<span class="function">draw_circuit</span>()
                </div>
                
                <div class="circuit">
q[0]: |0⟩─[S(0.5)]─●─────[X]
                   │
q[1]: |0⟩─[S(0.3)]─●─[R]─[P]
                 BS(π/4)
                </div>
            </div>
        </div>

        <!-- GBSサンプリング -->
        <div id="gbs" class="tab-content">
            <div class="circuit-container">
                <div class="circuit-title">🎯 ガウシアンボソンサンプリング（4モード）</div>
                <div class="code-block">
<span class="comment"># 4モードGBSの例</span>
prog = sf.<span class="function">Program</span>(<span class="number">4</span>)

<span class="keyword">with</span> prog.context <span class="keyword">as</span> q:
    <span class="comment"># 各モードで圧縮状態を生成</span>
    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="function">range</span>(<span class="number">4</span>):
        <span class="function">Sgate</span>(<span class="number">0.6</span>) | q[i]
    
    <span class="comment"># ランダム干渉計</span>
    <span class="function">Interferometer</span>(U) | q
    
    <span class="comment"># フォック状態測定</span>
    <span class="function">MeasureFock</span>() | q
                </div>
                
                <div class="circuit">
q[0]: |0⟩─[S]─┐         ┌─[F]
              │         │
q[1]: |0⟩─[S]─┤ Inter.  ├─[F]
              │ U(4×4)  │
q[2]: |0⟩─[S]─┤         ├─[F]
              │         │
q[3]: |0⟩─[S]─┘         └─[F]
                </div>
            </div>
        </div>

        <!-- GKP状態生成 -->
        <div id="gkp" class="tab-content">
            <div class="circuit-container">
                <div class="circuit-title">⚡ GKP状態生成回路</div>
                <div class="code-block">
<span class="comment"># GKP状態生成の例（4モード）</span>
prog = sf.<span class="function">Program</span>(<span class="number">4</span>)

<span class="keyword">with</span> prog.context <span class="keyword">as</span> q:
    <span class="comment"># 強いスクイージング</span>
    <span class="function">Sgate</span>(<span class="number">2.5</span>) | q[<span class="number">0</span>]  <span class="comment"># ~10dB</span>
    <span class="function">Sgate</span>(<span class="number">2.5</span>) | q[<span class="number">1</span>]  <span class="comment"># ~10dB</span>
    <span class="function">Sgate</span>(<span class="number">2.0</span>) | q[<span class="number">2</span>]  <span class="comment"># ~8dB</span>
    <span class="function">Sgate</span>(<span class="number">2.0</span>) | q[<span class="number">3</span>]  <span class="comment"># ~8dB</span>
    
    <span class="comment"># プログラマブル干渉計</span>
    <span class="function">BSgate</span>(θ₁, φ₁) | (q[<span class="number">0</span>], q[<span class="number">1</span>])
    <span class="function">BSgate</span>(θ₂, φ₂) | (q[<span class="number">1</span>], q[<span class="number">2</span>])
    <span class="function">BSgate</span>(θ₃, φ₃) | (q[<span class="number">2</span>], q[<span class="number">3</span>])
    
    <span class="comment"># ヘラルディング測定</span>
    <span class="function">MeasureFock</span>() | q[<span class="number">1</span>]  <span class="comment"># n₁=3期待</span>
    <span class="function">MeasureFock</span>() | q[<span class="number">2</span>]  <span class="comment"># n₂=3期待</span>
    <span class="function">MeasureFock</span>() | q[<span class="number">3</span>]  <span class="comment"># n₃=3期待</span>
    
    <span class="comment"># GKP状態出力</span>
    <span class="function">MeasureHD</span>(φ) | q[<span class="number">0</span>]  <span class="comment"># トモグラフィー</span>
                </div>
                
                <div class="circuit">
q[0]: |0⟩─[S(2.5)]─●─────[HD] ← GKP
                   │
q[1]: |0⟩─[S(2.5)]─●─●───[F] ← n₁
                    B₁ │
q[2]: |0⟩─[S(2.0)]────●─●─[F] ← n₂
                       B₂ │
q[3]: |0⟩─[S(2.0)]───────●─[F] ← n₃
                        B₃
                </div>
                
                <div class="visualization-grid">
                    <div class="wigner-plot">
                        <h4>ウィグナー関数</h4>
                        <div class="plot-placeholder">
                            3×3 格子構造<br>
                            負の領域が見える
                        </div>
                    </div>
                    <div class="prob-dist">
                        <h4>確率分布</h4>
                        <div class="plot-placeholder">
                            4つの分解可能<br>
                            なピーク
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- 量子機械学習 -->
        <div id="ml" class="tab-content">
            <div class="circuit-container">
                <div class="circuit-title">🧠 量子ニューラルネットワーク</div>
                <div class="code-block">
<span class="comment"># 変分量子回路の例</span>
<span class="keyword">def</span> <span class="function">quantum_neural_layer</span>(weights, modes):
    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="function">range</span>(modes):
        <span class="function">Rgate</span>(weights[i]) | q[i]      <span class="comment"># 回転</span>
        <span class="function">Sgate</span>(weights[i+modes]) | q[i] <span class="comment"># スクイージング</span>
    
    <span class="comment"># 全結合層</span>
    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="function">range</span>(modes-<span class="number">1</span>):
        <span class="function">BSgate</span>(weights[<span class="number">2</span>*modes+i], <span class="number">0</span>) | (q[i], q[i+<span class="number">1</span>])
    
    <span class="comment"># 非線形活性化</span>
    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="function">range</span>(modes):
        <span class="function">Kgate</span>(weights[<span class="number">3</span>*modes+i]) | q[i]
                </div>
                
                <div class="circuit">
q[0]: [D][R][S]●[K][R][S]●[K][X]
               │         │
q[1]: [D][R][S]●[K][R][S]●[K][P]
              BS        BS
                </div>
                
                <div class="code-block">
<span class="comment"># 勾配計算とパラメータ最適化</span>
<span class="keyword">from</span> autograd <span class="keyword">import</span> grad

<span class="keyword">def</span> <span class="function">cost_function</span>(weights, X, y):
    predictions = []
    <span class="keyword">for</span> x <span class="keyword">in</span> X:
        result = <span class="function">quantum_neural_network</span>(weights, x)
        predictions.<span class="function">append</span>(result)
    <span class="keyword">return</span> np.<span class="function">mean</span>((predictions - y)**<span class="number">2</span>)

gradient_fn = <span class="function">grad</span>(cost_function)
                </div>
            </div>
        </div>
    </div>

    <script>
        function showTab(tabName) {
            // タブコンテンツを全て非表示
            const contents = document.querySelectorAll('.tab-content');
            contents.forEach(content => content.classList.remove('active'));
            
            // タブボタンを全て非アクティブ
            const tabs = document.querySelectorAll('.tab');
            tabs.forEach(tab => tab.classList.remove('active'));
            
            // 選択されたタブを表示
            document.getElementById(tabName).classList.add('active');
            event.target.classList.add('active');
        }
    </script>
</body>
</html>
